basePath: /
definitions:
  models.Comment:
    properties:
      date_last_modified:
        type: string
      date_publication:
        type: string
      id:
        type: integer
      id_author:
        type: integer
      id_post:
        type: integer
      text_comment:
        type: string
    type: object
  models.Post:
    properties:
      date_last_modified:
        type: string
      date_publication:
        type: string
      description:
        type: string
      id:
        type: integer
      id_author:
        type: integer
      likes:
        type: integer
      title:
        type: string
    type: object
  models.Profile:
    properties:
      accesslevel:
        type: integer
      createdat:
        type: string
      firstname:
        type: string
      hashpassword:
        type: string
      id:
        type: integer
      lastname:
        type: string
      nickname:
        type: string
      status:
        type: boolean
    type: object
  service.errorResponse:
    properties:
      message:
        type: string
    type: object
  v1.Credentials:
    properties:
      nickname:
        type: string
      password:
        type: string
    type: object
  v1.errorResponse:
    properties:
      message:
        type: string
    type: object
  v1.statusResponse:
    properties:
      status:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Project for project...
  title: ProjectONE
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login using nickname and password to generate a JWT token
      parameters:
      - description: User credentials
        in: body
        name: creds
        required: true
        schema:
          $ref: '#/definitions/v1.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: JWT token
          schema:
            $ref: '#/definitions/v1.statusResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "401":
          description: Unauthorized error
          schema:
            $ref: '#/definitions/v1.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/v1.errorResponse'
      summary: User login
      tags:
      - sign
  /register:
    post:
      consumes:
      - application/json
      description: Creates a new profile by accepting profile details in the request
        body
      parameters:
      - description: Profile data
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/models.Profile'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Profile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/service.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/service.errorResponse'
      summary: Create a new profile
      tags:
      - sign
  /v1/comments:
    get:
      description: Retrieve a list of all comments from the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Comment'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/service.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all comments
      tags:
      - comments
    post:
      consumes:
      - application/json
      description: Add a new comment to the database
      parameters:
      - description: Comment Data
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.Comment'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Comment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/service.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/service.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a comment
      tags:
      - comments
  /v1/comments/{id}:
    delete:
      description: Remove a comment from the database by its ID
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/service.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/service.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a comment
      tags:
      - comments
    get:
      description: Retrieve a specific comment by its ID from the database
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Comment'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/service.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get comment by ID
      tags:
      - comments
    put:
      consumes:
      - application/json
      description: Update an existing comment's information by its ID
      parameters:
      - description: Comment ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated Comment Data
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/models.Comment'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/models.Comment'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/service.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/service.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/service.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update a comment
      tags:
      - comments
  /v1/posts:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all posts in the system
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of profiles per page (default: 5)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Post'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/service.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all posts
      tags:
      - posts
    post:
      consumes:
      - application/json
      description: Create a new post with title, description, and author information
      parameters:
      - description: New post data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/service.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/service.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new post
      tags:
      - posts
  /v1/posts/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an existing post by its unique ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/service.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/service.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a post by ID
      tags:
      - posts
    get:
      consumes:
      - application/json
      description: Retrieve a post's details by its unique ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/service.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/service.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get a post by ID
      tags:
      - posts
    put:
      consumes:
      - application/json
      description: Update the details of an existing post by its ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated post data
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.Post'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/service.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/service.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/service.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update an existing post
      tags:
      - posts
  /v1/profiles:
    get:
      consumes:
      - application/json
      description: Retrieve a list of profiles for a specific account by account ID
        with pagination
      parameters:
      - description: 'Page number (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of profiles per page (default: 5)'
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Profile'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/service.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/service.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/service.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get profiles
      tags:
      - authors
  /v1/profiles/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a profile from the system by its ID
      parameters:
      - description: Profile ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/service.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/service.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete a profile by ID
      tags:
      - authors
    get:
      consumes:
      - application/json
      description: Retrieve a specific profile by its ID
      parameters:
      - description: Account ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Profile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/service.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/service.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/service.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get profile by ID
      tags:
      - authors
    put:
      consumes:
      - application/json
      description: Update an existing profile's information by profile ID
      parameters:
      - description: Profile ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated profile data
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/models.Profile'
      produces:
      - application/json
      responses:
        "202":
          description: Accepted
          schema:
            $ref: '#/definitions/models.Profile'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/service.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/service.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/service.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update an existing profile
      tags:
      - authors
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
